<?php
namespace Beutnagel;

	/*
    |--------------------------------------------------------------------------
    | Doctype Result
    |--------------------------------------------------------------------------
    |
    | This result object holds the results generated by the Doctype Validator class.
    |
    */


/**
 * Class Doctype_Result
 * @package Beutnagel
 */
class Doctype_Result
{


    /**
     * Doctype_Result constructor.
     */
    public function __construct()
    {

    }






    /**
     * Automatically assign a result/value pair to the result object
     *
     * @param string $result   Name of the result, e.g. "valid"
     * @param string $value    The value to assign to the result
     *
     * @return boolean
     */
    public function setResult($result,$value)
    {

        if(property_exists("Beutnagel\Doctype_Result",$result)){
            $this->$result = $value;
            return true;
        } else {
            return false;
        }
    }


    private $fragments = array();



	/**
	 * Whether the result is an exact match for an existing public doctype.
	 *
	 * @var bool
	 */
	private $match = null;

    /**
	 * @return boolean
	 */
	public function isMatch()
	{
		return $this->match;
	}


    /*
    |--------------------------------------------------------------------------
    | VALID
    |--------------------------------------------------------------------------
    */


    /**
     * Whether the result is a valid doctype, i.e. does it conform to the
     * structural definition of a doctype.
	 * @var bool
     */
	private $valid = null;

	/**
	 * @return boolean
     */
    public function isValid() {
        return $this->valid;
    }
    public function getValid() {
        return $this->valid;
    }
    public function setValid($bool) {
        if($bool === true) {
            // only set valid to true if nothing has previously set it to false
            if($this->valid !== false) {
                $this->valid = $bool;
            }
        } else {
            $this->valid = $bool;
        }
    }



    /*
    |--------------------------------------------------------------------------
    | ERRORS
    |--------------------------------------------------------------------------
    */



    private $errors = array();

    public function addError($error)
    {
        // add error to array of errors
        $this->errors[] = $error;

        // set valid to false since if error the DTD cannot be valid
        $this->valid = false;
    }



    /**
     * If not an exact match for an existing doctype, this is the best
     * guess as to which doctype was meant.
     *
     * @var bool
     */
    // TODO implement best guess logic
    //private $best_guess = null;

    /**
     * @return string "none" or name of existing doctype
     */
/*    public function bestGuess()
    {
        return $this->best_guess;
    }
*/


    private $original = array();
    // private $number_of_doctypes_found = 0;





} // end class
